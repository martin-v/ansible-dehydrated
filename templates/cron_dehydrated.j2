#!/usr/bin/env bash
#
# dehydrated cron weekly
set -o nounset -o errexit -o pipefail

DEHYDRATED_USER="{{ dehydrated_username }}"
DEHYDRATED_BIN="{{ dehydrated_userhome }}/dehydrated/dehydrated"
TO_DEPLOY_DIR="{{ dehydrated_configdir }}/to_deploy"
LOG="{{ dehydrated_userhome }}/weekly-cron.log"


function log() {
	echo "============= ${1} ==============" >> "$LOG"
}
log "cron run $(date -Is) start"


# run etckeeper if configured
if ( [ -d /etc/.git ] && etckeeper unclean ) ; then
	etckeeper commit "commit before dehydrated run"
fi


# start dehydrated with option --cron
su "$DEHYDRATED_USER" --command "$DEHYDRATED_BIN --cron --config {{ dehydrated_configdir }}/config" >> "$LOG" 2> >(tee -a "$LOG" >&2)


log "dehydrated finished, start deploy certificates"


function deploy_cert {
	# fallback function for syntax errrors in ansible dehydrated_deploy_cert variable.
	echo "Certificate deployment failed for domain $1!
		Deploy script has syntax errrors, check your dehydrated_deploy_cert variable!"
}
# try to source ansible configured function deploy_cert
source "/usr/local/sbin/deploy_cert.sh"

shopt -s nullglob
for task in $TO_DEPLOY_DIR/*
do
	deploy_cert $(cat "$task") &>> "$LOG"
	if [[ $? == 0 ]];
	then
		echo "Deployed new cert for $(basename $task)"
		rm "$task"
	else
		echo "Certificate deployment for domain $(basename $task) failed!
			Please check $LOG for details!"
	fi
done


log "certificates deployed, start cleanup"


# start dehydrated with option --cleanup
su "$DEHYDRATED_USER" --command "$DEHYDRATED_BIN --cleanup --config {{ dehydrated_configdir }}/config" >> "$LOG" 2> >(tee -a "$LOG" >&2)


# run etckeeper if configured
if ( [ -d /etc/.git ] && etckeeper unclean ) ; then
	etckeeper commit "commit after dehydrated run"
fi


log "cron run $(date -Is) end"
exit 0
